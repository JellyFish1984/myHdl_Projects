// File: Barrel_Shifter.v
// Generated by MyHDL 0.11
// Date: Sun Feb  7 17:46:21 2021


`timescale 1ns/10ps

module Barrel_Shifter (
    par_in,
    par_out,
    shift_amount,
    shift,
    load
);
// A barrel shifter with 3-bits shift amount for 12-bits register.
// :param par_in: Parallel input to the register (12-bits).
// :param par_out: Parallel output of the register (12-bits).
// :param load: Load enable signal. Active High.
// :param shift: Shift enable signal. Active High.
// :param shift_amount: Amount of shift to be executed (3-bits maximum).

input [11:0] par_in;
output [11:0] par_out;
reg [11:0] par_out;
input [2:0] shift_amount;
input shift;
input load;



// Load the input into the register. or shift the output by specified amount
always @(posedge load, posedge shift) begin: BARREL_SHIFTER_LOGIC
    if ((load == 1)) begin
        par_out <= par_in;
    end
    else begin
        par_out <= (par_out >>> shift_amount);
    end
end

endmodule
